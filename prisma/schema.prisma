// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Supabase uses PostgreSQL
  url      = env("DATABASE_URL") // This will be your Supabase connection string
}

// Example Model (you'll define your actual models here based on docs/database-schema.md)
// model User {
//   id    String     @id @default(uuid())
//   email String  @unique
//   name  String?
//   posts Post[]
// }

// model Post {
//   id        String     @id @default(uuid())
//   title     String
//   content   String?
//   published Boolean @default(false)
//   author    User    @relation(fields: [authorId], references: [id])
//   authorId  String
// }

// Define your models for Itinerary, ServicePrice, Country, Province, etc. here.
// For example:
// model Country {
//   id              String    @id @default(uuid())
//   name            String    @unique
//   defaultCurrency String
//   provinces       Province[]
//   servicePrices   ServicePrice[] // If a service can be tied to a country directly
//   itineraries     Itinerary[]    @relation("ItineraryCountries") // If itineraries can have multiple countries
//   hotelDefs       HotelDefinition[] // If HotelDefinition has a direct countryId
// }

// model Province {
//   id            String    @id @default(uuid())
//   name          String
//   countryId     String
//   country       Country   @relation(fields: [countryId], references: [id])
//   servicePrices ServicePrice[] // If a service can be tied to a province
//   itineraries   Itinerary[]    @relation("ItineraryProvinces") // If itineraries can have multiple provinces
//   hotelDefs     HotelDefinition[] // If HotelDefinition has a direct province
//   // Ensure unique constraint for name within a country if needed:
//   // @@unique([name, countryId])
// }

// ... and so on for all your data types from docs/database-schema.md
